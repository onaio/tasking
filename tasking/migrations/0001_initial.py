# Generated by Django 2.0.5 on 2018-05-22 01:53

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import mptt.fields
import tasking.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id',
                 models.AutoField(
                     auto_created=True,
                     primary_key=True,
                     serialize=False,
                     verbose_name='ID')),
                ('created',
                 models.DateTimeField(
                     auto_now_add=True, verbose_name='Created')),
                ('modified',
                 models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('name',
                 models.CharField(
                     help_text='This represents the name of Location.',
                     max_length=255,
                     verbose_name='Name')),
                ('country',
                 django_countries.fields.CountryField(
                     blank=True,
                     default='',
                     help_text='This represents the Country.',
                     max_length=2,
                     verbose_name='Country')),
                ('geopoint',
                 django.contrib.gis.db.models.fields.PointField(
                     blank=True,
                     default=None,
                     help_text=
                     'This represents the Geographical Point of the Location.',
                     null=True,
                     srid=4326,
                     verbose_name='GeoPoint')),
                ('radius',
                 models.DecimalField(
                     blank=True,
                     decimal_places=4,
                     default=None,
                     help_text='This represents the radius from the geopoint.',
                     max_digits=64,
                     null=True,
                     verbose_name='Radius')),
                ('shapefile',
                 django.contrib.gis.db.models.fields.PolygonField(
                     blank=True,
                     default=None,
                     help_text='This represents the Shapefile of the Location',
                     null=True,
                     srid=4326,
                     verbose_name='Shapefile')),
                ('lft',
                 models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght',
                 models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id',
                 models.PositiveIntegerField(db_index=True, editable=False)),
                ('level',
                 models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent',
                 mptt.fields.TreeForeignKey(
                     blank=True,
                     default=None,
                     null=True,
                     on_delete=django.db.models.deletion.PROTECT,
                     related_name='children',
                     to='tasking.Location')),
            ],
            options={
                'ordering': ['country', 'name', 'id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id',
                 models.AutoField(
                     auto_created=True,
                     primary_key=True,
                     serialize=False,
                     verbose_name='ID')),
                ('created',
                 models.DateTimeField(
                     auto_now_add=True, verbose_name='Created')),
                ('modified',
                 models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('target_object_id',
                 models.PositiveIntegerField(
                     blank=True, db_index=True, default=None, null=True)),
                ('name',
                 models.CharField(
                     help_text='This is the name of the Project',
                     max_length=255,
                     verbose_name='Name')),
                ('target_content_type',
                 models.ForeignKey(
                     blank=True,
                     default=None,
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     to='contenttypes.ContentType')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SegmentRule',
            fields=[
                ('id',
                 models.AutoField(
                     auto_created=True,
                     primary_key=True,
                     serialize=False,
                     verbose_name='ID')),
                ('created',
                 models.DateTimeField(
                     auto_now_add=True, verbose_name='Created')),
                ('modified',
                 models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('name',
                 models.CharField(
                     help_text='The name of this rule.',
                     max_length=255,
                     verbose_name='Name')),
                ('description',
                 models.TextField(
                     blank=True,
                     default='',
                     help_text='The description of this rule.',
                     verbose_name='Description')),
                ('target_field',
                 models.CharField(
                     db_index=True,
                     help_text='The field on the target model.',
                     max_length=255,
                     verbose_name='Target Field')),
                ('target_field_value',
                 models.CharField(
                     help_text='The value of the target field',
                     max_length=255,
                     verbose_name='Target Field Value')),
                ('active', models.BooleanField()),
                ('target_content_type',
                 models.ForeignKey(
                     blank=True,
                     default=None,
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='segment_rule',
                     to='contenttypes.ContentType')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id',
                 models.AutoField(
                     auto_created=True,
                     primary_key=True,
                     serialize=False,
                     verbose_name='ID')),
                ('created',
                 models.DateTimeField(
                     auto_now_add=True, verbose_name='Created')),
                ('modified',
                 models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('target_object_id',
                 models.PositiveIntegerField(
                     blank=True, db_index=True, default=None, null=True)),
                ('submission_time',
                 models.DateTimeField(
                     help_text=
                     'This is the date and time the task was submitted.',
                     verbose_name='Submission Time')),
                ('valid',
                 models.BooleanField(
                     default=False,
                     help_text=
                     'This represents whether submission is valid or not.',
                     verbose_name='Valid')),
                ('approved',
                 models.BooleanField(
                     default=False,
                     help_text=
                     'This represents whether submission is approved or not.',
                     verbose_name='Approved')),
                ('comments',
                 models.TextField(
                     blank=True,
                     default='',
                     help_text='This represents the comments.',
                     verbose_name='Comments')),
                ('location',
                 models.ForeignKey(
                     blank=True,
                     default=None,
                     help_text='This represents the Location.',
                     null=True,
                     on_delete=django.db.models.deletion.PROTECT,
                     to='tasking.Location',
                     verbose_name='Location')),
                ('target_content_type',
                 models.ForeignKey(
                     blank=True,
                     default=None,
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     to='contenttypes.ContentType')),
            ],
            options={
                'ordering': ['submission_time', 'task__name', 'id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id',
                 models.AutoField(
                     auto_created=True,
                     primary_key=True,
                     serialize=False,
                     verbose_name='ID')),
                ('created',
                 models.DateTimeField(
                     auto_now_add=True, verbose_name='Created')),
                ('modified',
                 models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('target_object_id',
                 models.PositiveIntegerField(
                     blank=True, db_index=True, default=None, null=True)),
                ('name',
                 models.CharField(
                     help_text='This represents the name.',
                     max_length=255,
                     verbose_name='Name')),
                ('description',
                 models.TextField(
                     blank=True,
                     default='',
                     help_text='This represents the description.',
                     verbose_name='Description')),
                ('start',
                 models.DateTimeField(
                     help_text='This is the date and time the task starts.',
                     verbose_name='Start')),
                ('end',
                 models.DateTimeField(
                     blank=True,
                     default=None,
                     help_text='This is the date and time the task starts.',
                     null=True,
                     verbose_name='Start')),
                ('timing_rule',
                 models.TextField(
                     help_text='This stores the rrule for recurrence.',
                     validators=[tasking.utils.validate_rrule],
                     verbose_name='Timing Rule')),
                ('total_submission_target',
                 models.IntegerField(
                     blank=True,
                     default=None,
                     help_text=
                     'This is the total number of submissions required for this task. Set to None if there is no Max.',
                     null=True,
                     verbose_name='Total Submissions Target')),
                ('user_submission_target',
                 models.IntegerField(
                     blank=True,
                     default=None,
                     help_text=
                     'This is the total number of submissions per user required for this task. Set to None if there is no Max.',
                     null=True,
                     verbose_name='User Submissions Target')),
                ('status',
                 models.CharField(
                     choices=[('a', 'Active'), ('b', 'Deactivated'),
                              ('c', 'Expired'), ('d', 'Draft')],
                     default='d',
                     help_text='The status of the Task',
                     max_length=1,
                     verbose_name='Status')),
                ('lft',
                 models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght',
                 models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id',
                 models.PositiveIntegerField(db_index=True, editable=False)),
                ('level',
                 models.PositiveIntegerField(db_index=True, editable=False)),
                ('locations',
                 models.ManyToManyField(
                     blank=True,
                     default=None,
                     help_text='This represents the location.',
                     to='tasking.Location',
                     verbose_name='Location')),
                ('parent',
                 mptt.fields.TreeForeignKey(
                     blank=True,
                     default=None,
                     help_text='This represents the parent task.',
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     to='tasking.Task',
                     verbose_name='Parent task')),
                ('segment_rules',
                 models.ManyToManyField(
                     blank=True,
                     default=None,
                     to='tasking.SegmentRule',
                     verbose_name='Segment Rules')),
                ('target_content_type',
                 models.ForeignKey(
                     blank=True,
                     default=None,
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     to='contenttypes.ContentType')),
            ],
            options={
                'ordering': ['start', 'name', 'id'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='submission',
            name='task',
            field=models.ForeignKey(
                help_text='This represents the Task.',
                on_delete=django.db.models.deletion.PROTECT,
                to='tasking.Task',
                verbose_name='Task'),
        ),
        migrations.AddField(
            model_name='submission',
            name='user',
            field=models.ForeignKey(
                help_text='This represents the User.',
                on_delete=django.db.models.deletion.PROTECT,
                to=settings.AUTH_USER_MODEL,
                verbose_name='User'),
        ),
        migrations.AddField(
            model_name='project',
            name='tasks',
            field=models.ManyToManyField(
                blank=True,
                default=None,
                help_text='This represents the Task.',
                to='tasking.Task',
                verbose_name='Tasks'),
        ),
    ]
